<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="bdbf591f-d89a-46fa-bfcc-18adfaf2a3dd" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/tf-lstm-char-cnn-master.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/tf-lstm-char-cnn-master.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config.json" beforeDir="false" afterPath="$PROJECT_DIR$/config.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evaluate.py" beforeDir="false" afterPath="$PROJECT_DIR$/evaluate.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/network_handler.py" beforeDir="false" afterPath="$PROJECT_DIR$/network_handler.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/train.py" beforeDir="false" afterPath="$PROJECT_DIR$/train.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/trained_models/AMI_2019-08-03--12-04-23/train_parameters.csv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/trained_models/AMI_2019-08-03--12-14-21/train_parameters.csv" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/trained_models/AMI_2019-08-03--12-17-49/train_parameters.csv" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="ROOT_SYNC" value="DONT_SYNC" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1TAOoKJMlR5Mjov3bVE8p3jhryh" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="E:/Users/Ohad.Volk/AppData/Local/Continuum/anaconda3/envs/project36" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.network_handler">
    <configuration name="network_handler" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="tf-lstm-char-cnn-master" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/network_handler.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="training" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="tf-lstm-char-cnn-master" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="C:\Users\Ohad.Volk\Desktop\Oshri\tf-lstm-char-cnn-master\tf-lstm-char-cnn-master\network_handler.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.network_handler" />
        <item itemvalue="Python.training" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bdbf591f-d89a-46fa-bfcc-18adfaf2a3dd" name="Default Changelist" comment="" />
      <created>1562167898652</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1562167898652</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/tf-lstm-char-cnn" />
    </ignored-roots>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/train.py</url>
          <line>199</line>
          <option name="timeStamp" value="54" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/train.py</url>
          <line>209</line>
          <option name="timeStamp" value="80" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/data_reader.py</url>
          <line>153</line>
          <option name="timeStamp" value="82" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/network_handler.py</url>
          <line>70</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/evaluate.py</url>
          <line>64</line>
          <option name="timeStamp" value="90" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/network_handler.py</url>
          <line>58</line>
          <option name="timeStamp" value="92" />
        </line-breakpoint>
      </breakpoints>
      <default-breakpoints>
        <breakpoint type="python-exception">
          <properties notifyOnTerminate="true" exception="BaseException">
            <option name="notifyOnTerminate" value="true" />
          </properties>
        </breakpoint>
      </default-breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateCodeFragment">
      <expression>
        <expression-string>set(word_tensors['train']).difference(set(words_list))</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(set(word_tensors['train']) - set(words_list))</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>set(word_tensors['train']) - set(words_list)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(set(word_tensors['train']))</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>len(set(word_tensors['train'])</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>shape = _input.get_shape().as_list()
if len(shape) != 2:
    raise ValueError(&quot;Linear is expecting 2D arguments: %s&quot; % str(shape))
if not shape[1]:
    raise ValueError(&quot;Linear expects shape[1] of arguments: %s&quot; % str(shape))
input_size = shape[1]
# Now the computation.
with tf.variable_scope(scope or &quot;SimpleLinear&quot;):
    matrix = tf.get_variable(&quot;Matrix&quot;, [output_size, input_size], dtype=tf.float32)
    bias_term = tf.get_variable(&quot;Bias&quot;, [output_size], dtype=tf.float32)
tf.matmul(_input, tf.transpose(matrix)) + bias_term</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>shape = _input.get_shape().as_list()
    if len(shape) != 2:
        raise ValueError(&quot;Linear is expecting 2D arguments: %s&quot; % str(shape))
    if not shape[1]:
        raise ValueError(&quot;Linear expects shape[1] of arguments: %s&quot; % str(shape))
    input_size = shape[1]
    # Now the computation.
    with tf.variable_scope(scope or &quot;SimpleLinear&quot;):
        matrix = tf.get_variable(&quot;Matrix&quot;, [output_size, input_size], dtype=tf.float32)
        bias_term = tf.get_variable(&quot;Bias&quot;, [output_size], dtype=tf.float32)
    tf.matmul(_input, tf.transpose(matrix)) + bias_term</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>shape = _input.get_shape().as_list()
    if len(shape) != 2:
        raise ValueError(&quot;Linear is expecting 2D arguments: %s&quot; % str(shape))
    if not shape[1]:
        raise ValueError(&quot;Linear expects shape[1] of arguments: %s&quot; % str(shape))
    input_size = shape[1]
    # Now the computation.
    with tf.variable_scope(scope or &quot;SimpleLinear&quot;):
        matrix = tf.get_variable(&quot;Matrix&quot;, [output_size, input_size], dtype=tf.float32)
        bias_term = tf.get_variable(&quot;Bias&quot;, [output_size], dtype=tf.float32)
     tf.matmul(_input, tf.transpose(matrix)) + bias_term</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
      <expression>
        <expression-string>adict(
        input=input_,
        input2=input2_,
        clear_char_embedding_padding=clear_char_embedding_padding,
        input_embedded=input_embedded,
        input_cnn=input_cnn,
        initial_rnn_state=initial_rnn_state,
        final_rnn_state=final_rnn_state,
        rnn_outputs=outputs,
        logits=logits
    )</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>CODE_FRAGMENT</evaluation-mode>
      </expression>
    </expressions>
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>trained_model_folder</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>'.' + FLAGS.load_model_for_test[1:] + &quot;.index&quot;</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>os.path.exists('.' + FLAGS.load_model_for_test[1:] + &quot;.index&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>os.path.exists('.' +FLAGS.load_model_for_test[1:] + &quot;.index&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>FLAGS.load_model_for_test[1:]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>os.path.exists(FLAGS.load_model_for_test[1:] + &quot;.index&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>os.path.exists(FLAGS.load_model_for_test.split[1:] + &quot;.index&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>FLAGS.load_model_for_test.split('/')</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>FLAGS.load_model_for_test</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>